// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------- //
// dc_motor //
// -------- //

#define dc_motor_wrap_target 0
#define dc_motor_wrap 6

static const uint16_t dc_motor_program_instructions[] = {
            //     .wrap_target
    0x9080, //  0: pull   noblock         side 0     
    0xa027, //  1: mov    x, osr                     
    0x6002, //  2: out    pins, 2                    
    0x604f, //  3: out    y, 15                      
    0x0084, //  4: jmp    y--, 4                     
    0x704f, //  5: out    y, 15           side 0     
    0x0086, //  6: jmp    y--, 6                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program dc_motor_program = {
    .instructions = dc_motor_program_instructions,
    .length = 7,
    .origin = -1,
};

static inline pio_sm_config dc_motor_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + dc_motor_wrap_target, offset + dc_motor_wrap);
    sm_config_set_sideset(&c, 3, true, false);
    return c;
}

static inline void dc_motor_program_init(PIO pio, uint sm, uint offset, uint firstPWMpin) {
    // Initialize the output pins
    pio_gpio_init(pio, firstPWMpin);
    pio_gpio_init(pio, firstPWMpin + 1);
    // Set consecutive pin directions for both output pins
    pio_sm_set_consecutive_pindirs(pio, sm, firstPWMpin, 2, true);
    // Load default config and set side-set pins
    pio_sm_config c = dc_motor_program_get_default_config(offset);
    sm_config_set_sideset_pins(&c, firstPWMpin);
    sm_config_set_out_pins(&c, firstPWMpin, 2);
    // Configure clkdiv
    sm_config_set_clkdiv(&c, 1);
    // Initialize the state machine with the updated configuration
    pio_sm_init(pio, sm, offset, &c);
    // Set both pins to 0
    pio_sm_set_pins(pio, sm, 0);
}

#endif

